IN: gadgets
USING: help gadgets-buttons gadgets-panes gadgets-labels
generic models kernel ;

HELP: control
{ $class-description "A control is a " { $link gadget } " linked with a " { $link model } " stored in the " { $link control-model } " slot. Changes to the model are reflected in the appearance and behavior of the control, and the control may in turn change the value of the model in response to user input."
$terpri
"Controls are created by calling " { $link <control> } " and " { $link delegate>control } ". Other words to create controls include:"
{ $list
    { $link <label-control> }
    { $link <radio-control> }
    { $link <pane-control> }
}
$terpri
"Objects may delegate to " { $link control } " instances, in which case the " { $link control-self } " slot must be set to the frontmost object in the delegation chain. This ensures that the correct object receives notification of model changes." }
{ $see-also control-value set-control-value } ;

HELP: <control>
{ $values { "model" model } { "gadget" gadget } { "quot" "a quotation with stack effect " { $snippet "( value control -- )" } } }
{ $description "Creates a new control linked to the given model. The gadget parameter becomes the control's delegate. The quotation is called when the model value changes," }
{ $see-also delegate>control control-value set-control-value } ;

HELP: control-value
{ $values { "control" control } { "value" object } }
{ $description "Outputs the value of the control's model." } ;

HELP: set-control-value
{ $values { "value" object } { "control" control } }
{ $description "Sets the value of the control's model." } ;

HELP: delegate>control
{ $values { "tuple" tuple } { "model" model } { "underlying" gadget } }
{ $description "Creates a new " { $link control } " and creates a delegation chain where " { $snippet "tuple" } " at the front delegates to the new " { $link control } " which delegates to " { $snippet "underlying" } ". The " { $link model-changed } " word is called on " { $snippet "tuple" } " when the model changes." }
{ $side-effects "tuple" }
{ $see-also <control> } ;
