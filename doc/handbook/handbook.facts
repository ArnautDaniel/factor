USING: generic hashtables help inspector namespaces parser
prettyprint sequences words ;

ARTICLE: "handbook" "Factor documentation"
{ $subsection "changes" }
{ $heading "Survival guide" }
{ $list
    { "Load source files using " { $link run-file } ":"
    { $code "\"contrib/httpd/load.factor\" run-file" } }
    { { $link .s } " prints the contents of the stack." }
    { { $link . } " prints the object at the top of the stack." }
}
{ $heading "Cookbook" }
{ $subsection "cookbook-syntax" }
{ $subsection "cookbook-colon-defs" }
{ $subsection "cookbook-combinators" }
{ $subsection "cookbook-variables" }
{ $subsection "cookbook-vocabs" }
{ $subsection "cookbook-sources" }
{ $subsection "cookbook-io" }
{ $heading "Language reference" }
{ $subsection "conventions" }
{ $subsection "syntax" }
{ $subsection "dataflow" }
{ $subsection "words" }
{ $subsection "objects" }
{ $subsection "math" }
{ $subsection "collections" }
{ $subsection "streams" }
{ $subsection "parser" }
{ $subsection "prettyprint" }
{ $subsection "alien" }
{ $heading "Environment reference" }
{ $subsection "tools" }
{ $subsection "help" }
{ $heading "Index" }
{ $subsection "article-index" }
{ $subsection "primitive-index" }
{ $subsection "type-index" }
{ $subsection "class-index" } ;

ARTICLE: "article-index" "Article index"
{ $outliner [ articles get hash-keys ] } ;

ARTICLE: "primitive-index" "Primitive index"
{ $outliner [ all-words [ primitive? ] subset ] } ;

ARTICLE: "type-index" "Type index"
{ $outliner [ builtins get [ ] subset ] } ;

ARTICLE: "class-index" "Class index"
{ $outliner [ classes get [ ] subset ] } ;
