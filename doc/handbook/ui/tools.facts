USING: gadgets gadgets-listener gadgets-browser gadgets-help
gadgets-walker gadgets-dataflow gadgets-workspace help
gadgets-panes gadgets-text listener ;

ARTICLE: "ui-listener" "UI listener"
"The graphical listener is based around the terminal listener (" { $link "listener" } ") and adds an input history and clickable output presentations (" { $link "styles" } ")."
$terpri
"Listeners are instances of " { $link listener-gadget } ". The listener consists of an output area (instance of " { $link pane } "), an input area (instance of " { $link interactor } "), and a stack display kept up to date using a " { $link listener-hook } "."
$terpri
"The word commands appearing in the below list operate on the token at the caret position in the input area. The quotation commands operate on the entire contents of the input area. The walker and dataflow tools are invoked using these commands."
{ $commands listener-gadget }
;

ARTICLE: "ui-browser" "UI definition browser"
"Definition browsers are instances of " { $link browser } "."
{ $commands browser }
;

ARTICLE: "ui-help" "UI documentation browser"
"Documentation browsers are instances of " { $link help-gadget } "."
{ $commands help-gadget }
;

ARTICLE: "ui-walker" "UI walker"
"The walker single-steps through quotations. To use the walker, enter a piece of code in the listener's input area and press " { $snippet "C+A+w" } "."
$terpri
"The walker can travel backwards through time, and restore stacks. This does not undo side effects and therefore can only be used reliably on referentially transparent code."
$terpri
"Walkers are instances of " { $link walker-gadget } "."
{ $commands walker-gadget }
;

ARTICLE: "ui-dataflow" "UI dataflow tool"
"The dataflow viewer displays the stack effect of a quotation in a graphical way. To use it, enter a piece of code in the listener's input area and press " { $snippet "C+A+d" } ", or click the " { $strong "Dataflow" } " button in a definition tile shown by the UI browser."
$terpri
"Only quotations and words for which a stack effect can be inferred can be viewed. See " { $link "inference" } "."
$terpri
"The dataflow viewer displays the dataflow intermediate representation output by the compiler's optimizer. Therefore inlining and various other optimizations will have already been performed, and the visual representation may not resemble your original code in many ways. An upside of this arrangement is that the dataflow viewer can be used to predict how fast the code will run, because you will see which layers of generic dispatch have been optimized out at compile time."
$terpri
"Dataflow viewers are instances of " { $link dataflow-gadget } "."
{ $commands dataflow-gadget }
;

ARTICLE: "ui-tools" "Development tools in the UI"
"UI development tools are integrated into a single-window " { $emphasis "workspace" } ". Multiple workspaces can be open at once, and keyboard commands are provided for switching between tools."
$terpri
"Workspaces are instances of " { $link workspace-window } "."
{ $commands workspace }
{ $subsection "ui-listener" }
{ $subsection "ui-browser" }
{ $subsection "ui-help" }
{ $subsection "ui-walker" }
{ $subsection "ui-dataflow" } ;
