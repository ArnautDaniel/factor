+ allot refactoring:

- inline float allocation needs a gc check
- docs: don't pass volatile aliens to callbacks
- windows rollover broken again
- intrinsic fixnum>float float>fixnum
- amd64 structs-by-value bug
- callback scheduling issue
- sometimes fep when closing window
- %allot-bignum-signed-2: handle carry in negation
- x86: load-allot-ptr doesn't have a stack effect? why?
- mov 0x0(%esi),%ecx  why?
- mac intel: perhaps its not a good idea using ebx as allot-tmp-reg

+ ui:

- live search: timer delay would be nice
- menu should stay up if mouse button released
- roundoff is still not quite right with tracks
- grid displays quickly now, but constructing large amounts of gadgets
  is slow: eg, 10000 [ dup number>string ] map describe
- completion is not ideal: eg, C+e "buttons"
- some way of intercepting all gestures
- slider needs to be modelized
- better help result ranking
- help search looks funny
- variable width word wrap
- graphical module manager tool
- ui browser: show currently selected vocab & words
- auto-update browser and help when sources reload
- how do we refer to command shortcuts in the docs?
- fix top level window positioning
- editor:
  - autoscroll
  - transpose char/word/line
  - more efficient multi-line inserts
- see if its possible to only repaint dirty regions
- structure editor

+ module system:

- modules should support definition protocol
- track a list of assets loaded from each module's file
- C types should be words
  - TYPEDEF: float { ... } { ... } ;   ==> \ float T{ c-type ... } "c-type" swp
  - TYPEDEF: float FTFloat ;  ==> \ float \ FTFloat "c-type" swp
  - make typedef aliasing explicit
- seeing a C struct word should show its def
- file out

+ compiler/ffi:

- we may be able to remove the dlsym primitive
- [ [ dup call ] dup call ] infer hangs
- stdcall callbacks
- callstack overflow when compiling mutually recursive inline words
- test what is done in the case of an invalid declaration on an inline
  recursive
- ppc64 backend
- arm backend
- mac intel: struct returns from objc methods
- float= doesn't consider nans equal
- C functions returning structs by value
- infer which variables are read, written in a quotation
- compiled continuations
- compiled call traces

+ prettyprinter:

- array with POSTPONE: in it: printed wrong
- clean it up
- if we're printing a block on multiple lines, break at some words like
  set off on % # , ... and assembler opcodes
- don't end lines with literals, shuffle words or symbols?
- see should try to not show ; on a line by itself
- IN: on its own line if the entire 'see' form doesn't fit
- don't build entire tree to print first

+ misc:

- faster apropos
- growable data heap
- minor GC takes too long now, we should card mark code heap
- buffer-ptr should be an alien
- swap nappend ==> nappend
- gdb triggers 'mutliple i/o ops on port' error
- incremental GC
- UDP
- slice: if sequence or seq start is changed, abstraction violation
- hashed generic method dispatch

+ httpd:

- remaining HTML issues need fixing
