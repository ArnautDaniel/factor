+ 0.80:

- need something like uncons but for arbitrary sequences

word help sections:
- synopsis
- inputs and outputs
- exceptions
- see also
- examples
- side effects
- affected by (dynamic variables)

parsing word sections:
- syntax

- sort out types on 64-bit platforms -- on win64, long is 4 bytes,
  on linux, 8
- malloc, free, realloc, memcpy: aliens
- check 'see'
- intrinsic char-slot set-char-slot for x86
- closing ui does not stop timers
- adding/removing timers automatically for animated gadgets
- saving image with UI open
- fix up the min thumb size hack
- callbacks
- better prettyprinting of cond
- the invalid recursion form case needs to be fixed, for inlines too
- what about tasks and timers between image restarts
- double hash

+ ui:

- bug: click tutorial, full screen, the right-most arrow icon
  loses the vertical bar
- make-pane: if no input, just return pane-output
- keyboard completion
- get outliner working with lots of lines of output
- listener continuations
- tabular output
- debugger should use outlining
- support nested incremental layouts more efficiently
- only redraw dirty gadgets
- find out why so many small bignums get consed
- use incremental strategy for all pack layouts where possible
- multiline editing in listener
- text selection
- clipboard support

+ misc

- code walker & exceptions
- signal handler should not lose stack pointers

+ ffi:

- FIELD: char key_vector[32];
- FIELD: union { char b[20]; short s[10]; long l[5]; } data;
- MEMBER: long pad[24];
- C structs, enums, unions: use new-style string mode parsing
- smarter out parameter handling
- clarify powerpc passing of value struct parameters
- ffi unicode strings: null char security hole
- utf16 string boxing
- value type structs
- bitfields in C structs
- setting struct members that are not *
- convert factor sequences to c arrays, and vice versa

+ compiler:

- declare slot types for built-ins
- check that set-datastack and set-callstack compile correctly in the
  face of optimization
- [ ] [ throw ] ifte ==> should raise 'unbalanced branches' error
- remove dead code after a 'throw'
- flushing optimization
- [ [ dup call ] dup call ] infer hangs
- compile continuations

+ sequences:

- split: return vectors
- set-path: iterative
- slice: if sequence or seq start is changed, abstraction violation
- mutable strings simplifying string operarations

+ kernel:

- first-class methods:
  - methods outliner
  - annotations for methods
  - originating source file for methods
- reader syntax for byte arrays, displaced aliens
- out of memory error when printing global namespace
- merge timers with sleeping tasks
- delegating generic words with a non-standard picker
- code gc

+ i/o:

- i/o tasks hanging around
- faster stream-copy
- reading and writing byte arrays
- stream server can hang because of exception handler limitations
- better i/o scheduler
- if two tasks write to a unix stream, the buffer can overflow
