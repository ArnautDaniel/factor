+ io:

- pop all callbacks at once
- unix i/o: problems with passing f to syscalls
- factorcode httpd started using 99% CPU, but still received connections;
  closing read-fds solved it
- gdb triggers 'mutliple i/o ops on port' error
- "localhost" 50 <client> won't fail

+ help:

- double 'presented' for the block & char style
- refactor style stack code so that nested styles are handled at a lower-level
  - with-style & with-stream-style
    - in HTML, we can nest div tags, etc
- automatically update help graph and search index when adding/removing
  articles/words
- help search:
  - edit distance algorithm
  - store positions in index
  - phrase scoring algorithm based on how close the terms occur?
- fix remaining HTML stream issues
- better line spacing in ui and html - related issue

+ ui:

- help viewer in ui: show title
- x11 title bars are funny
- cocoa: starting the UI with +foo switches opens them as files
- if the listener is running a command when the image is saved, it
  restores to an unresponsive gadget
- fix top level window positioning
- services do not launch if factor not running
- prettyprinter's highlighting of non-leaves doesn't really work
- rollover is not updated on window focus changes
- fix listener scroll to
- { } H{ } [ ] tabular-output -- excess newline
- multiple listener-run-files is broken
- table line styles
- x11 input methods
- roundoff is still not quite right with tracks
- new browser:
  - browse generic words and classes
  - need actions for reloading the source file and opening word in jEdit
  - highlight showing panes in originating list
  - single set of tabs across the top
- toggle/radio buttons/tabs or something
- make-frame should compile
- speed up ideas:
  - only do clipping for certain gadgets
  - use glRect
  - use complex numbers instead of arrays for co-ordinates
  - use vertex arrays
  - use display lists
- reimplement tab completion
- cocoa:
  - horizontal wheel scrolling
  - polish OS X menu bar code
  - dock menu
- variable width word wrap

+ compiler/ffi:

- fix compiled gc check
  - there was a performance hit, investigate
  - float boxing and overflow checks need a gc check too
- amd64 crash
- get factor running on mac intel
- constant branch folding
- type inference at branch merge points
- free up r11, r12 as a vreg on ppc
- float= on powerpc doesn't consider nans equal
- intrinsic fixnum>float float>fixnum
- win64 port
- complex float type
- complex float intrinsics
- remove literal table
- C functions returning structs by value
- FIELD: char key_vector[32];
- FIELD: union { char b[20]; short s[10]; long l[5]; } data;
- MEMBER: long pad[24];
- C structs: use new-style string mode parsing
- [ [ dup call ] dup call ] infer hangs
- the invalid recursion form case needs to be fixed, for inlines too
- code gc

+ misc:

- if a primitive throws an error, :c doesn't show the call frame there
- fix this:

  [ 1 2 3 4 5 6 7 8 9 10 10 10 10 10 10 10 10 10 10 11 11 11 113 ] .
[ 1 2 3 4 5 6 7 8 9 10 10 10 10 10 10 10 10 10 10 11 11 11 113 
]

- code walker & exceptions -- test and debug problems
- slice: if sequence or seq start is changed, abstraction violation
- make 3.4 bits>double an error
- break: perhaps use current stdio to run break listener
