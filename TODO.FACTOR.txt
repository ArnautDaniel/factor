+ tomorrow:

- amd64 crash

+ day after:

- roundoff is still not quite right with tracks
- httpd search tools
[2:45pm] tathi: Factor's text display is a bit odd sometimes, until you mouse over (or click, if there's no "live" text)
[2:48pm] tathi: it appears to be using the font metrics from the sprite tuple, but re-using the texture from the previous letter
[2:59pm] tathi: hmm...and it looks like it's only be happening the first time you use a given character (from a given font face)

+ io:

- unix i/o: problems with passing f to syscalls
- factorcode httpd started using 99% CPU, but still received connections;
  closing read-fds solved it
- gdb triggers 'mutliple i/o ops on port' error
- "localhost" 50 <client> won't fail

+ ui:

- 'show' doesn't work if invoked from a listener on an object which is
  itself inspected in the listener
- ui uses too much cpu time idling
- add some handy services:
  - base conversion
  - search help for selection
- grid slows down with 2000 lines
- clickable vocabs
- remaining HTML issues need fixing
- better component padding and spacing in UI
- see if its possible to only repaint dirty regions
- x11 title bars are funny
- if the listener is running a command when the image is saved, it
  restores to an unresponsive gadget
- fix top level window positioning
- services do not launch if factor not running
- prettyprinter's highlighting of non-leaves doesn't really work
- rollover is not updated on window focus changes
- x11 input methods
- new browser:
  - browse generic words and classes
  - need actions for reloading the source file and opening word in jEdit
  - highlight showing panes in originating list
- make-frame should compile
- reimplement tab completion
- cocoa:
  - horizontal wheel scrolling
  - polish OS X menu bar code
- variable width word wrap
- use models for the following:
  - editor gadgets
  - search tool
  - slider needs range-model or similar

+ compiler/ffi:

- mac intel: struct returns from objc methods
- see if alien calls can be made faster
- faster sequence= for UI
- fix compiled gc check
  - there was a performance hit, investigate
  - float boxing and overflow checks need a gc check too
- constant branch folding
- type inference at branch merge points
- float= on powerpc doesn't consider nans equal
- intrinsic fixnum>float float>fixnum
- remove literal table
- C functions returning structs by value
- [ [ dup call ] dup call ] infer hangs
- the invalid recursion form case needs to be fixed, for inlines too
- code gc

+ misc:

- mac intel: fault address not reported
- slice: if sequence or seq start is changed, abstraction violation
- hashed generic method dispatch
- fix this:

  [ 1 2 3 4 5 6 7 8 9 10 10 10 10 10 10 10 10 10 10 11 11 11 113 ] .
[ 1 2 3 4 5 6 7 8 9 10 10 10 10 10 10 10 10 10 10 11 11 11 113 
]

- code walker & exceptions -- test and debug problems
- break: perhaps use current stdio to run break listener
