USING: generic help sequences ;

HELP: standard-combination "( word dispatch# -- quot )"
{ $values { "word" "a generic word" } { "dispatch#" "a dispatch position" } { "quot" "a new quotation" } }
{ $description
    "Performs standard method combination."
    $terpri
    "Generic words using the standard method combination dispatch on the class of the object at the given stack position, where 0 is the top of the stack, 1 is the object underneath, and 2 is the next one under that. If no suitable method is defined on the class of the dispatch object, the generic word is called on the dispatch object's delegate. If the delegate is " { $link f } ", an exception is thrown."
}
{ $examples
    "A generic word for append strings and characters to a sequence, dispatching on the object underneath the top of the stack:"
    { $code
        "G: build-string 1 standard-combination ;"
        "M: string build-string swap nappend ;"
        "M: integer build-string push ;"
    }
}
{ $notes "The " { $link POSTPONE: GENERIC: } " parsing word defines generic words using the standard method combination with dispatch position 0." }
{ $examples "Most generic words in the standard library use this method combination with a dispatch position of 0. A handful of combinators such as " { $link each } " dispatch on position 1, since position 0 (the top of the stack) is a quotation." }
{ $see-also POSTPONE: GENERIC: define-generic POSTPONE: G: define-generic* } ;

HELP: define-generic "( word -- )"
{ $values { "word" "a word" } }
{ $description "Defines a generic word with the " { $link standard-combination } " method combination, and a dispatch position of 0." }
{ $see-also POSTPONE: GENERIC: define-generic* } ;
